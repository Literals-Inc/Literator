// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Literator
import Combine
import CommonCrypto
import CoreMedia
import Foundation
import QuartzCore
import ReplayKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import os
@_hasMissingDesignatedInitializers public class LiteratorClient {
  public static func start(_ accessToken: Swift.String, _ application: UIKit.UIApplication, _ config: Literator.LiteratorConfig = LiteratorConfig.builder().build())
  public static func sendAnalytics<T>(eventName: Swift.String, properties: T, tag: Swift.String? = nil) where T : Swift.Encodable
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class LiteratorConfig {
  public static func defaultConfig() -> Literator.LiteratorConfig
  public static func builder() -> Literator.LiteratorConfig.ConfigBuilder
  @_hasMissingDesignatedInitializers public class ConfigBuilder {
    public func build() -> Literator.LiteratorConfig
    public func customBuildIdentifier(_ buildIdentifier: Swift.String?) -> Literator.LiteratorConfig.ConfigBuilder
    public func useDeviceAsBuildIdentifier() -> Literator.LiteratorConfig.ConfigBuilder
    public func enableNetworkingLogging(_ enable: Swift.Bool) -> Literator.LiteratorConfig.ConfigBuilder
    @objc deinit
  }
  @objc deinit
}
extension UIKit.UIWindow {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func swizzledSendEvent(_ event: UIKit.UIEvent)
}
